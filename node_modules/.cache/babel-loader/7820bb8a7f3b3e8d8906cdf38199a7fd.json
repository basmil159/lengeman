{"ast":null,"code":"import _toConsumableArray from\"H:/React/Lengeman/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"H:/React/Lengeman/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";// firts Section of the modal box where users can choose file or add job manually\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Addjob=function Addjob(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"addJob\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"addJob__file\",children:\"load from file\"}),/*#__PURE__*/_jsx(\"button\",{className:\"addJob__manually\",onClick:function onClick(){props.showSelectJob(true);props.hideSelf(false);},children:\"create jobs manually\"})]});};// Second Section of the modal box where user selects the jobs to be created\nvar Selectjob=function Selectjob(props){var jobs=[\"Create three circles\",\"Cut the circles in the middle\",\"Load Vaccum\"];//All the jobs that can be assigned\nvar vaccumTypes=[\"Vaccum 1\",\"Vaccum 2\",\"Vaccum 3\"];var _useState=useState([jobs[0]]),_useState2=_slicedToArray(_useState,2),newJobs=_useState2[0],setNewJobs=_useState2[1];//to get all the jobs selected by user in \"newJobs \"array\nvar _useState3=useState(vaccumTypes[0]),_useState4=_slicedToArray(_useState3,2),vaccums=_useState4[0],setVaccums=_useState4[1];//to get the vaccum type selected by user\nconsole.log(newJobs);console.log(vaccums);// This function enable to select multi job when add new job button is clicked\nvar handleJobAdd=function handleJobAdd(){setNewJobs([].concat(_toConsumableArray(newJobs),[\"\"]));};// This function helps to get the user selected data from dropdown and update a state.\nvar handelNewChanges=function handelNewChanges(e,index,type){var value=e.target.value;if(type==\"job\"){var _jobs=_toConsumableArray(newJobs);_jobs[index]=value;setNewJobs(_jobs);setVaccums(\"\");}else{setVaccums(type);}};return/*#__PURE__*/_jsx(_Fragment,{children:newJobs.map(function(newjob,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"selectJob\",children:[index<1&&/*#__PURE__*/_jsx(\"h3\",{children:\" select job \"}),index>0&&/*#__PURE__*/_jsxs(\"h3\",{children:[\" select job \",index+1]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"select\",{name:\"newJobs\",id:\"selectnewJobs\".concat(index+1),value:newJobs[index],onChange:function onChange(e){return handelNewChanges(e,index,\"job\");},children:jobs.map(function(job,index){return/*#__PURE__*/_jsx(\"option\",{value:job,children:job},index);})}),newJobs[index]==jobs[2]&&/*#__PURE__*/_jsxs(\"div\",{className:\"selectJob\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Vaccum Type\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"select\",{name:\"vaccum\",id:\"vaccum\".concat(index+1),value:vaccums[index],children:vaccumTypes.map(function(vaccum,index){return/*#__PURE__*/_jsx(\"option\",{value:vaccum,onClick:function onClick(e){return handelNewChanges(e,index,{vaccum:vaccum});},children:vaccum},index);})})]}),newJobs.length-1===index&&newJobs.length<3&&/*#__PURE__*/_jsxs(\"div\",{href:\"\",className:\"selectJob__addbtn\",onClick:handleJobAdd,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"small-svg\",fill:\"#4A4A4A\",children:/*#__PURE__*/_jsx(\"use\",{xlinkHref:\"img/blackbox.svg#addbtn\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Add new job\"})]})]});})});};// Third Section of the Modal box where use can load vaccum cover and create a job\nvar SelectVaccum=function SelectVaccum(props){var _useState5=useState([\"\"]),_useState6=_slicedToArray(_useState5,2),vaccumCovers=_useState6[0],setVaccumCovers=_useState6[1];var items=[\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];// this function update the state and store the user selected cover into vaccumCovers array\nvar handelNewChanges=function handelNewChanges(e,index){var value=e.target.value;var covers=_toConsumableArray(vaccumCovers);covers[index]=value;setVaccumCovers(covers);};// Filter out the empty elements of the array\nvar filterVaccumCovers=vaccumCovers.filter(function(e){return e!==null&&e!==undefined&&e!==\"\";});return/*#__PURE__*/_jsxs(\"div\",{className:\"selectVaccum\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Load Vaccum Cover\"}),/*#__PURE__*/_jsx(\"div\",{className:\"selectVaccum__vaccum-cover\",children:items.map(function(item,index){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[\" \",item]}),Array.apply(0,Array(13)).map(function(num,i){return/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"\".concat(item).concat(i+1),name:\"vaccum_cover-\".concat(item),value:\"\".concat(item).concat(i+1),onClick:function onClick(e){return handelNewChanges(e,index);}},i);})]},index)});})}),/*#__PURE__*/_jsxs(\"div\",{className:\"selectVaccum__selectedCover\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Selected Columns\"}),/*#__PURE__*/_jsx(\"br\",{}),filterVaccumCovers.map(function(cover,index){return/*#__PURE__*/_jsxs(\"span\",{children:[filterVaccumCovers.length-1!=index&&/*#__PURE__*/_jsxs(_Fragment,{children:[cover,\", \"]}),filterVaccumCovers.length-1===index&&/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",cover]})]});})]})]});};var Modal=function Modal(props){var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),showAddJob=_useState8[0],setShowAddJob=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showSelectJob=_useState10[0],setShowSelectJob=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showSelectVaccum=_useState12[0],setShowSelectVaccum=_useState12[1];return/*#__PURE__*/_jsx(\"div\",{className:\"modal\",onClick:function onClick(){setShowAddJob(true);setShowSelectJob(false);props.hideModal(false);}//for closing and reseting the modal box when clicked outside the box\n,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal__container\",onClick:function onClick(e){return e.stopPropagation();},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal__title\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add job\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"big-svg\",fill:\"#4A4A4A\",onClick:function onClick(){props.hideModal(false);}// closes the modal box when clicked\n,children:/*#__PURE__*/_jsx(\"use\",{xlinkHref:\"img/blackbox.svg#close\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal__body\",children:[showAddJob&&/*#__PURE__*/_jsx(Addjob,{showSelectJob:setShowSelectJob,hideSelf:setShowAddJob}),\" \",showSelectJob&&/*#__PURE__*/_jsx(Selectjob,{}),\" \",showSelectVaccum&&/*#__PURE__*/_jsx(SelectVaccum,{}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal__btns\",children:[showAddJob==false&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setShowAddJob(true);setShowSelectJob(false);props.hideModal(false);}// closes and reset the modal box\n,children:\"Cancel\"}),showSelectJob==true&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setShowSelectJob(false);setShowSelectVaccum(true);},children:\"Next\"}),showSelectVaccum==true&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setShowSelectJob(false);setShowSelectVaccum(true);},children:\"Create Job\"})]})]})});};export default Modal;","map":{"version":3,"sources":["H:/React/Lengeman/src/components/Modal.jsx"],"names":["React","useState","Addjob","props","showSelectJob","hideSelf","Selectjob","jobs","vaccumTypes","newJobs","setNewJobs","vaccums","setVaccums","console","log","handleJobAdd","handelNewChanges","e","index","type","value","target","map","newjob","job","vaccum","length","SelectVaccum","vaccumCovers","setVaccumCovers","items","covers","filterVaccumCovers","filter","undefined","item","Array","apply","num","i","cover","Modal","showAddJob","setShowAddJob","setShowSelectJob","showSelectVaccum","setShowSelectVaccum","hideModal","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n// firts Section of the modal box where users can choose file or add job manually\r\nconst Addjob = (props) => {\r\n  return (\r\n    <div className=\"addJob\">\r\n      <button className=\"addJob__file\">load from file</button>\r\n      <button\r\n        className=\"addJob__manually\"\r\n        onClick={() => {\r\n          props.showSelectJob(true);\r\n          props.hideSelf(false);\r\n        }}\r\n      >\r\n        create jobs manually\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Second Section of the modal box where user selects the jobs to be created\r\nconst Selectjob = (props) => {\r\n  const jobs = [\r\n    \"Create three circles\",\r\n    \"Cut the circles in the middle\",\r\n    \"Load Vaccum\",\r\n  ]; //All the jobs that can be assigned\r\n  const vaccumTypes = [\"Vaccum 1\", \"Vaccum 2\", \"Vaccum 3\"];\r\n  const [newJobs, setNewJobs] = useState([jobs[0]]); //to get all the jobs selected by user in \"newJobs \"array\r\n  const [vaccums, setVaccums] = useState(vaccumTypes[0]); //to get the vaccum type selected by user\r\n\r\n  console.log(newJobs);\r\n  console.log(vaccums);\r\n\r\n  // This function enable to select multi job when add new job button is clicked\r\n  const handleJobAdd = () => {\r\n    setNewJobs([...newJobs, \"\"]);\r\n  };\r\n\r\n  // This function helps to get the user selected data from dropdown and update a state.\r\n  const handelNewChanges = (e, index, type) => {\r\n    const { value } = e.target;\r\n    if (type == \"job\") {\r\n      const jobs = [...newJobs];\r\n      jobs[index] = value;\r\n      setNewJobs(jobs);\r\n      setVaccums(\"\");\r\n    } else {\r\n      setVaccums(type);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {newJobs.map((newjob, index) => (\r\n        <div className=\"selectJob\">\r\n          {index < 1 && <h3> select job </h3>}\r\n          {index > 0 && <h3> select job {index + 1}</h3>}\r\n          <br />\r\n          <select\r\n            name=\"newJobs\"\r\n            id={`selectnewJobs${index + 1}`}\r\n            value={newJobs[index]}\r\n            onChange={(e) => handelNewChanges(e, index, \"job\")}\r\n          >\r\n            {jobs.map((job, index) => (\r\n              <option key={index} value={job}>\r\n                {job}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* //dependent dropdrown  */}\r\n          {newJobs[index] == jobs[2] && (\r\n            <div className=\"selectJob\">\r\n              <br />\r\n              <h3>Vaccum Type</h3>\r\n              <br />\r\n              <select\r\n                name=\"vaccum\"\r\n                id={`vaccum${index + 1}`}\r\n                value={vaccums[index]}\r\n              >\r\n                {vaccumTypes.map((vaccum, index) => (\r\n                  <option\r\n                    key={index}\r\n                    value={vaccum}\r\n                    onClick={(e) => handelNewChanges(e, index, { vaccum })}\r\n                  >\r\n                    {vaccum}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {/* this condition will only let the user to add max 3 jobs by disabling or  hidding the add new job after user select max 3 jobs */}\r\n          {newJobs.length - 1 === index && newJobs.length < 3 && (\r\n            <div href=\"\" className=\"selectJob__addbtn\" onClick={handleJobAdd}>\r\n              <svg className=\"small-svg\" fill=\"#4A4A4A\">\r\n                <use xlinkHref=\"img/blackbox.svg#addbtn\"></use>\r\n              </svg>\r\n              <span>Add new job</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n// Third Section of the Modal box where use can load vaccum cover and create a job\r\nconst SelectVaccum = (props) => {\r\n  const [vaccumCovers, setVaccumCovers] = useState([\"\"]);\r\n  const items = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\r\n\r\n  // this function update the state and store the user selected cover into vaccumCovers array\r\n  const handelNewChanges = (e, index) => {\r\n    const { value } = e.target;\r\n    const covers = [...vaccumCovers];\r\n    covers[index] = value;\r\n\r\n    setVaccumCovers(covers);\r\n  };\r\n\r\n  // Filter out the empty elements of the array\r\n  const filterVaccumCovers = vaccumCovers.filter((e) => {\r\n    return e !== null && e !== undefined && e !== \"\";\r\n  });\r\n\r\n  return (\r\n    <div className=\"selectVaccum\">\r\n      <h3>Load Vaccum Cover</h3>\r\n\r\n      <div className=\"selectVaccum__vaccum-cover\">\r\n        {items.map((item, index) => (\r\n          <>\r\n            <h2 key={index}>\r\n              <span> {item}</span>\r\n              {Array.apply(0, Array(13)).map((num, i) => (\r\n                <input\r\n                  key={i}\r\n                  type=\"radio\"\r\n                  id={`${item}${i + 1}`}\r\n                  name={`vaccum_cover-${item}`}\r\n                  value={`${item}${i + 1}`}\r\n                  onClick={(e) => handelNewChanges(e, index)}\r\n                />\r\n              ))}\r\n            </h2>\r\n          </>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Displays the user selected columns  */}\r\n      <div className=\"selectVaccum__selectedCover\">\r\n        <h3>Selected Columns</h3>\r\n        <br />\r\n\r\n        {filterVaccumCovers.map((cover, index) => (\r\n          <span>\r\n            {filterVaccumCovers.length - 1 != index && <>{cover}, </>}\r\n            {filterVaccumCovers.length - 1 === index && <> {cover}</>}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const [showAddJob, setShowAddJob] = useState(true);\r\n  const [showSelectJob, setShowSelectJob] = useState(false);\r\n  const [showSelectVaccum, setShowSelectVaccum] = useState(false);\r\n  return (\r\n    <div\r\n      className=\"modal\"\r\n      onClick={() => {\r\n        setShowAddJob(true);\r\n        setShowSelectJob(false);\r\n        props.hideModal(false);\r\n      }} //for closing and reseting the modal box when clicked outside the box\r\n    >\r\n      <div className=\"modal__container\" onClick={(e) => e.stopPropagation()}>\r\n        {/* Preventing the close of modal box when clicked inside the box */}\r\n        <div className=\"modal__title\">\r\n          <h3>Add job</h3>\r\n\r\n          <svg\r\n            className=\"big-svg\"\r\n            fill=\"#4A4A4A\"\r\n            onClick={() => {\r\n              props.hideModal(false);\r\n            }}\r\n            // closes the modal box when clicked\r\n          >\r\n            <use xlinkHref=\"img/blackbox.svg#close\"></use>\r\n          </svg>\r\n        </div>\r\n        <div className=\"modal__body\">\r\n          {showAddJob && (\r\n            <Addjob showSelectJob={setShowSelectJob} hideSelf={setShowAddJob} />\r\n          )}{\" \"}\r\n          {/* Shows 1st secton of modal box when true */}\r\n          {showSelectJob && <Selectjob />}{\" \"}\r\n          {/* Shows 2nd secton of modal box i.e. selecting the jobs to be created when true */}\r\n          {showSelectVaccum && <SelectVaccum />}{\" \"}\r\n          {/* Shows 3rd secton of modal box i.e. selecting the vaccum cover when the result is true */}\r\n        </div>\r\n        <div className=\"modal__btns\">\r\n          {showAddJob == false && (\r\n            <button\r\n              onClick={() => {\r\n                setShowAddJob(true);\r\n                setShowSelectJob(false);\r\n                props.hideModal(false);\r\n              }}\r\n              // closes and reset the modal box\r\n            >\r\n              Cancel\r\n            </button>\r\n          )}\r\n\r\n          {showSelectJob == true && (\r\n            <button\r\n              onClick={() => {\r\n                setShowSelectJob(false);\r\n                setShowSelectVaccum(true);\r\n              }}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n          {showSelectVaccum == true && (\r\n            <button\r\n              onClick={() => {\r\n                setShowSelectJob(false);\r\n                setShowSelectVaccum(true);\r\n              }}\r\n            >\r\n              Create Job\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}