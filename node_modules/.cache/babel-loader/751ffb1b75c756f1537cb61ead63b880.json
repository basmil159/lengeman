{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\blackbox-react\\\\src\\\\components\\\\Jobs.jsx\",\n    _s = $RefreshSig$();\n\nimport Modal from \"./Modal\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction jobTitles(args) {\n  if (args === \"To-Do\") return \"job__status--to-do\";\n  if (args === \"In Progress\") return \"job__status--progress\";\n  if (args === \"Done\") return \"job__status--done\";\n}\n\nfunction jobLists(args) {\n  if (args === \"To-Do\") return \"job__status-list--to-do\";\n  if (args === \"In Progress\") return \"job__status-list--progress\";\n  if (args === \"Done\") return \"job__status-list--done\";\n}\n\nconst todoJobs = [[\"Job#1\", \"Not initialised\"], [\"Job#2\", \"Initalised\"], [\"Job#3\", \"Underway\"]];\nconst inProgJobs = [[\"Job#1\", \"55% completed\"], [\"Job#2\", \"75% completed\"], [\"Job#3\", \"85% completed\"]];\nconst doneJobs = [[\"Job#1\", \"Feb 22, 2022\"], [\"Job#2\", \"Feb 23, 2020\"], [\"Job#3\", \"Feb 02, 2019\"]];\n/**\r\n * @Job component receives title, icon and jobDetails props\r\n * @title  - title of each job card,\r\n * @icon - if icon=true, we display the arrow icons in TODO card section, refer JobField\r\n *    --> if icon=true, we return JObField component optimized for TODO\r\n *    --> else return JobField for In-progress and done\r\n * @jobDetails - is an array containing array.\r\n */\n\nconst JobField = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job__status-list job__status-list--add\",\n    children: [props.icon ? /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"big-svg job__status-list--priority\",\n      fill: props.fill,\n      style: {\n        transform: props.rotate\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [props.priority, \" Priority\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"use\", {\n        xlinkHref: \"img/blackbox.svg#arrow-up-red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job__status-list--text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", props.jobDetails[0], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", props.jobDetails[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job__status-list--delete-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"small-svg job__status-list--delete\",\n        children: /*#__PURE__*/_jsxDEV(\"use\", {\n          xlinkHref: \"img/blackbox.svg#delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"small-svg job__status-list--info\",\n        children: /*#__PURE__*/_jsxDEV(\"use\", {\n          xlinkHref: \"img/blackbox.svg#error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = JobField;\n\nconst Job = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `job ${props.title}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job__status\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: jobTitles(props.title),\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"small-svg\",\n        children: /*#__PURE__*/_jsxDEV(\"use\", {\n          xlinkHref: \"img/blackbox.svg#filter_list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: jobLists(props.title),\n      children: props.icon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(JobField, {\n          jobDetails: props.jobDetails[0],\n          icon: props.icon,\n          priority: \"High\",\n          fill: \"#D80027\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JobField, {\n          jobDetails: props.jobDetails[1],\n          icon: props.icon,\n          priority: \"Medium\",\n          fill: \"#FB7925\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JobField, {\n          jobDetails: props.jobDetails[2],\n          icon: props.icon,\n          priority: \"Low\",\n          fill: \"#686868\",\n          rotate: \"rotate(180deg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(JobField, {\n          jobDetails: props.jobDetails[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JobField, {\n          jobDetails: props.jobDetails[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(JobField, {\n          jobDetails: props.jobDetails[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Job;\nexport const Jobs = () => {\n  _s();\n\n  const [openModal, setOpenModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"job__topbar\",\n      style: {\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job__status-add\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"jobjob__status-add--btn\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => {\n              setOpenModal(true); //opens modal box on click by setting openModel to true\n            },\n            children: \"Add Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job__status-add\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"job__status-add--btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"small-svg\",\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: \"img/blackbox.svg#add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => {\n              setOpenModal(true); //opens modal box on click by setting openModel to true\n            },\n            children: \"Add Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), openModal && /*#__PURE__*/_jsxDEV(Modal, {\n          hideModal: setOpenModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jobs\",\n      children: [/*#__PURE__*/_jsxDEV(Job, {\n        title: \"To-Do\",\n        icon: true,\n        jobDetails: todoJobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Job, {\n        title: \"In Progress\",\n        jobDetails: inProgJobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Job, {\n        title: \"Done\",\n        jobDetails: doneJobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Jobs, \"uYk1wngonhmNAAo8U/frFfYvuzQ=\");\n\n_c3 = Jobs;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"JobField\");\n$RefreshReg$(_c2, \"Job\");\n$RefreshReg$(_c3, \"Jobs\");","map":{"version":3,"sources":["H:/React/blackbox-react/src/components/Jobs.jsx"],"names":["Modal","React","useState","jobTitles","args","jobLists","todoJobs","inProgJobs","doneJobs","JobField","props","icon","fill","transform","rotate","priority","jobDetails","Job","title","Jobs","openModal","setOpenModal","display","width","justifyContent"],"mappings":"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","sourcesContent":["import Modal from \"./Modal\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction jobTitles(args) {\r\n  if (args === \"To-Do\") return \"job__status--to-do\";\r\n  if (args === \"In Progress\") return \"job__status--progress\";\r\n  if (args === \"Done\") return \"job__status--done\";\r\n}\r\n\r\nfunction jobLists(args) {\r\n  if (args === \"To-Do\") return \"job__status-list--to-do\";\r\n  if (args === \"In Progress\") return \"job__status-list--progress\";\r\n  if (args === \"Done\") return \"job__status-list--done\";\r\n}\r\n\r\nconst todoJobs = [\r\n  [\"Job#1\", \"Not initialised\"],\r\n  [\"Job#2\", \"Initalised\"],\r\n  [\"Job#3\", \"Underway\"],\r\n];\r\n\r\nconst inProgJobs = [\r\n  [\"Job#1\", \"55% completed\"],\r\n  [\"Job#2\", \"75% completed\"],\r\n  [\"Job#3\", \"85% completed\"],\r\n];\r\nconst doneJobs = [\r\n  [\"Job#1\", \"Feb 22, 2022\"],\r\n  [\"Job#2\", \"Feb 23, 2020\"],\r\n  [\"Job#3\", \"Feb 02, 2019\"],\r\n];\r\n\r\n/**\r\n * @Job component receives title, icon and jobDetails props\r\n * @title  - title of each job card,\r\n * @icon - if icon=true, we display the arrow icons in TODO card section, refer JobField\r\n *    --> if icon=true, we return JObField component optimized for TODO\r\n *    --> else return JobField for In-progress and done\r\n * @jobDetails - is an array containing array.\r\n */\r\n\r\nconst JobField = (props) => {\r\n  return (\r\n    <div className=\"job__status-list job__status-list--add\">\r\n      {/* props.icon passes from Job component inside Jobs to JobFields, refer top comment for more detail */}\r\n      {props.icon ? (\r\n        <svg\r\n          className=\"big-svg job__status-list--priority\"\r\n          fill={props.fill}\r\n          style={{ transform: props.rotate }}\r\n        >\r\n          <title>{props.priority} Priority</title>\r\n          <use xlinkHref=\"img/blackbox.svg#arrow-up-red\"></use>\r\n        </svg>\r\n      ) : null}\r\n\r\n      <div className=\"job__status-list--text\">\r\n        <h2> {props.jobDetails[0]} </h2>\r\n        <p> {props.jobDetails[1]}</p>\r\n      </div>\r\n      <div className=\"job__status-list--delete-info\">\r\n        <svg className=\"small-svg job__status-list--delete\">\r\n          <use xlinkHref=\"img/blackbox.svg#delete\"></use>\r\n        </svg>\r\n        <svg className=\"small-svg job__status-list--info\">\r\n          <use xlinkHref=\"img/blackbox.svg#error\"></use>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Job = (props) => {\r\n  \r\n  return (\r\n    <div className={`job ${props.title}`}>\r\n      <div className=\"job__status\">\r\n        <h2 className={jobTitles(props.title)}>{props.title}</h2>\r\n        <svg className=\"small-svg\">\r\n          <use xlinkHref=\"img/blackbox.svg#filter_list\"></use>\r\n        </svg>\r\n      </div>\r\n    <div className={jobLists(props.title)}>\r\n      {props.icon ? (\r\n        <>\r\n          {/**\r\n           * props.jobDetails is a 2d array, so every index has another array\r\n           * example, for TODO card,\r\n           * {props.jobDetails} = [['Job#1', 'Not initialized'],['Job#2', 'Initialized'],['Job#3', 'Underway']]\r\n           * {props.jobDetails[0]} = ['Job#1', 'Not initialized'],\r\n           * {props.jobDetails[1]} = ['Job#2', 'Initialized'] and so on\r\n           * this individual index values of {props.jobDetails} are passed to JobField Component as props\r\n           * along with fill and icon\r\n           */}\r\n\r\n          <JobField\r\n            jobDetails={props.jobDetails[0]}\r\n            icon={props.icon}\r\n            priority=\"High\"\r\n            fill=\"#D80027\"\r\n          />\r\n          <JobField\r\n            jobDetails={props.jobDetails[1]}\r\n            icon={props.icon}\r\n            priority=\"Medium\"\r\n            fill=\"#FB7925\"\r\n          />\r\n          <JobField\r\n            jobDetails={props.jobDetails[2]}\r\n            icon={props.icon}\r\n            priority=\"Low\"\r\n            fill=\"#686868\"\r\n            rotate=\"rotate(180deg\"\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <JobField jobDetails={props.jobDetails[0]} />\r\n          <JobField jobDetails={props.jobDetails[1]} />\r\n          <JobField jobDetails={props.jobDetails[2]} />\r\n        </>\r\n      )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Jobs = () => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  return (\r\n    <>\r\n    <div classname=\"job__topbar\" style={{display:\"flex\", width:\"100%\", justifyContent:\"space-between\"}}>\r\n    <div className=\"job__status-add\">\r\n          <a href=\"#\" className=\"jobjob__status-add--btn\">\r\n             <h3\r\n              onClick={() => {\r\n                setOpenModal(true); //opens modal box on click by setting openModel to true\r\n              }}\r\n              >\r\n              Add Job\r\n            </h3>\r\n          </a>\r\n    </div>\r\n    <div className=\"job__status-add\">\r\n          <a href=\"#\" className=\"job__status-add--btn\">\r\n            <svg className=\"small-svg\">\r\n              <use xlinkHref=\"img/blackbox.svg#add\"></use>\r\n            </svg>\r\n            <h3\r\n              onClick={() => {\r\n                setOpenModal(true); //opens modal box on click by setting openModel to true\r\n              }}\r\n              >\r\n              Add Job\r\n            </h3>\r\n          </a>\r\n          {openModal && <Modal hideModal={setOpenModal} />}\r\n          {/* opens modal box if openModel is set true  */}\r\n        </div>\r\n        </div>\r\n    <section className=\"jobs\">\r\n      <Job title=\"To-Do\" icon={true} jobDetails={todoJobs} />\r\n      <Job title=\"In Progress\" jobDetails={inProgJobs} />\r\n      <Job title=\"Done\" jobDetails={doneJobs} />\r\n    </section>\r\n              </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}